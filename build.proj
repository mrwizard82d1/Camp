<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="15.0"
         DefaultTargets="All"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="SetEnvironmentVariable"
             TaskFactory="CodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">

    <ParameterGroup>
      <Name ParameterType="System.String" Required="true" />
      <Value ParameterType="System.String" Required="true" />
    </ParameterGroup>

    <Task>
      <Using Namespace="System" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
                 Environment.SetEnvironmentVariable(Name, Value);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <PropertyGroup>
    <Version>0.1.0.0</Version>
    <ProductVersion>0.1.0-SNAPSHOT</ProductVersion>
    <OutDir>bin\</OutDir>
    <Configuration>Debug</Configuration>
    <SourceDir>src\</SourceDir>
    <ToolsDir>tools\</ToolsDir>
    <ClojureCompiler>$(ToolsDir)Clojure.Compile.exe</ClojureCompiler>
    <PackagesDir>packages\</PackagesDir>
    <ClojurePackageDir>$(PackagesDir)Clojure.1.8.0\</ClojurePackageDir>
    <TargetsDir>targets\</TargetsDir>
    <TestProjectName>test-project</TestProjectName>
    <ChocoExe>$(PackagesDir)chocolatey.0.9.8.28\tools\chocolateyInstall\chocolatey.cmd</ChocoExe>
    <ClojureCompilePath>$([System.IO.Path]::GetFullPath($(TargetsDir)))</ClojureCompilePath>
  </PropertyGroup>

  <ItemGroup>
    <Tools Include="$(ClojurePackageDir)tools\net40\*" />
  </ItemGroup>

  <ItemGroup>
    <Libs Include="$(CLJCLR)\*.dll" />
    <Libs Include="$(PackagesDir)Nuget.Core.2.8.5\lib\net40-Client\NuGet.Core.dll" />
    <Libs Include="$(PackagesDir)Westwind.RazorHosting.3.00\lib\net40\Westwind.RazorHosting.dll" />
    <Libs Include="$(PackagesDir)Microsoft.AspNet.Razor.3.2.3\lib\net45\*.dll" />
  </ItemGroup>

  <ItemGroup>
    <Sources Include="$(SourceDir)**/*.clj" Exclude="*#*" />
  </ItemGroup>

  <ItemGroup>
    <Resources Include="resources\templates\gitignore.razor">
      <LogicalName>templates.gitignore</LogicalName>
    </Resources>
    <Resources Include="resources\templates\README.md.razor">
      <LogicalName>templates.README.md</LogicalName>
    </Resources>
    <Resources Include="resources\templates\project.razor">
      <LogicalName>templates.project.clj</LogicalName>
    </Resources>
    <Resources Include="resources\templates\core.clj.razor">
      <LogicalName>templates.core.clj</LogicalName>
    </Resources>
    <Resources Include="resources\templates\lib\project.razor">
      <LogicalName>templates.lib.project.clj</LogicalName>
    </Resources>
    <Resources Include="resources\templates\lib\core.clj.razor">
      <LogicalName>templates.lib.core.clj</LogicalName>
    </Resources>
    <Resources Include="resources\templates\webapp\project.razor">
      <LogicalName>templates.webapp.project.clj</LogicalName>
    </Resources>
    <Resources Include="resources\templates\webapp\core.clj.razor">
      <LogicalName>templates.webapp.core.clj</LogicalName>
    </Resources>
  </ItemGroup>

  <Target Name="RestorePackages">
    <Exec Command="&quot;$(ToolsDir)NuGet.exe&quot; restore -PackagesDirectory &quot;$(PackagesDir.TrimEnd('\'))&quot;" />
  </Target>

  <Target Name="All" DependsOnTargets="Compile;Package" />

  <Target Name="Compile"
	  DependsOnTargets="InitToolsDir;
			    InitTargetsDir;
			    CompileResources;
			    CompileClojure;
			    PostCompile"
          Outputs="$(TargetsDir)camp.exe">
    <Copy SourceFiles="$(TargetsDir)camp.main.exe"
          DestinationFiles="$(TargetsDir)camp.exe" />
  </Target>

  <Target Name="InitToolsDir">
    <Copy SourceFiles="@(Tools)"
          DestinationFolder="$(ToolsDir)"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(Libs)"
          DestinationFolder="$(ToolsDir)"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="InitTargetsDir">
    <!-- copy libs to targets directory for final executable -->
    <Copy SourceFiles="@(Libs)"
          DestinationFolder="$(TargetsDir)"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="CompileResources"
          Inputs="@(Resources)"
          Outputs="$(ToolsDir)camp.resources.dll">
    <AL EmbedResources="@(Resources)"
        Description="Resources used by camp"
        Title="camp resources"
        ProductName="camp"
        ProductVersion="$(Version)"
        Version="$(Version)"
        OutputAssembly="$(TargetsDir)camp.resources.dll" />
    <Copy SourceFiles="$(TargetsDir)camp.resources.dll"
          DestinationFolder="$(ToolsDir)" />
  </Target>

  <Target Name="CompileClojure"
          Inputs="@(Sources)"
          Outputs="@(Sources->'$(TargetsDir)%(Identity).dll'->Replace('src\', '')->Replace('camp\', 'camp.')->Replace('tasks\', 'tasks.'))">
    <!-- have compiler output go straight into targets path -->
    <Message Text="CLOJURE_COMPILE_PATH = $(ClojureCompilePath)" />
    <SetEnvironmentVariable Name="CLOJURE_COMPILE_PATH" Value="$(ClojureCompilePath)" />
    <Exec Command="..\$(ClojureCompiler) @(Sources->Replace('src\', '')->Replace('.clj', '')->Replace('\', '.')->Replace('_', '-'), ' ')"
          WorkingDirectory="$(SourceDir)" />
  </Target>

  <Target Name="PostCompile"
	  Inputs="$(TargetsDir)camp.main.exe"
	  Outputs="$(TargetsDir)camp.exe">
    <Copy SourceFiles="$(TargetsDir)camp.main.exe"
	  DestinationFiles="$(TargetsDir)camp.exe"
	  SkipUnchangedFiles="true" />
  </Target>

  <Target Name="TestNew" DependsOnTargets="Compile">
    <RemoveDir Directories="$(TestProjectName)" />
    <Exec Command="$(TargetsDir)camp.exe new $(TestProjectName)"
          WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>

  <Target Name="TestNewLib" DependsOnTargets="Compile">
    <RemoveDir Directories="$(TestProjectName)" />
    <Exec Command="$(TargetsDir)camp.exe new lib $(TestProjectName)"
          WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>

  <Target Name="TestNewWebApp" DependsOnTargets="Compile">
    <RemoveDir Directories="$(TestProjectName)" />
    <Exec Command="$(TargetsDir)camp.exe new webapp $(TestProjectName)"
          WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>

  <Target Name="TestDeps" DependsOnTargets="Compile">
    <Exec Command="$(TargetsDir)camp.exe deps"
          WorkingDirectory="$(MSBuildThisFileDirectory)$(TestProjectName)" />
  </Target>

  <Target Name="TestCompile" DependsOnTargets="Compile">
    <Exec Command="..\$(TargetsDir)camp.exe compile --verbose"
          WorkingDirectory="$(MSBuildThisFileDirectory)$(TestProjectName)" />
  </Target>

  <Target Name="TestRunTarget" DependsOnTargets="Compile">
    <Message Text="Target output:" Importance="high" />
    <Message Text="----------------------------------------" Importance="high" />
    <Exec Command="$(TestProjectName).core.exe"
          WorkingDirectory="$(TestProjectName)\targets" />
    <Message Text="----------------------------------------" Importance="high" />
  </Target>

  <Target Name="Package" DependsOnTargets="ChocolateyPackage" />

  <Target Name="ChocolateyPackage" DependsOnTargets="Compile">
    <Exec Command="$(ChocoExe) pack chocolatey\camp.nuspec" />
  </Target>

  <Target Name="Install" DependsOnTargets="Package">
    <Exec Command="$(ChocoExe) install --force --pre --source chocolatey camp.portable" />
  </Target>

  <Target Name="UnInstall">
    <Exec Command="$(ChocoExe) uninstall --allversions camp.portable" />
  </Target>

  <Target Name="Clean">
    <ItemGroup>
      <Garbage Include="chocolatey\*.nupkg" />
      <Garbage Include="$(ToolsDir)*" Exclude="$(ToolsDir)nuget.exe" />
    </ItemGroup>

    <Delete Files="@(Garbage)" />
    
    <RemoveDir Directories="$(TargetsDir)" />
    <RemoveDir Directories="$(TestProjectName)" />

  </Target>

</Project>
